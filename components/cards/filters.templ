package cards

import (
	"collector/components/input"
	"collector/components/scripts"
	"collector/internal/filter_cards"
)

func emptyOrStr(v bool, s string) string {
	if v {
		return s
	}
	return ""
}

//
templ Filters(nextPageEndpint, cardsTarget string, params *filter_cards.FilterParameters) {
	<form
		id="filters"
		hx-boost="true"
		hx-get={ nextPageEndpint }
		hx-target={ cardsTarget }
		class="group mx-auto px-4"
		onclick={ scripts.RequestSubmitParentForm(templ.JSExpression("event")) }
	>
		@SearchBar(params.SearchField)
		<div class="hidden group-hover:block transition-all duration-1000 rounded-b-lg border-x-2 border-b-2 border-gray-300">
			<div class="w-auto px-4 gap-1 bg-white rounded-b-lg shadow-md p-6">
				@FilterFlags(params.Categories)
				/* 				<div class="flex items-center justify-between gap-2 pt-8">
					<button
						type="submit"
						class="grow bg-blue-600 hover:bg-blue-500 text-white font-semibold py-2 px-4 rounded transition-all duration-300 ease-in-out"
					>Submit</button>
					<span class="w-1 h-full bg-gray-200"></span>
					@buttonResetForm("Reset", false)
				</div> */
			</div>
		</div>
	</form>
}

templ buttonResetForm(name string, transition bool) {
	<button
		type="button"
		onclick={ scripts.ResetFilters(templ.JSExpression("event")) }
		class={ "hover:grow bg-blue-600 hover:bg-blue-500 text-white font-semibold py-2 px-4 rounded " + emptyOrStr(transition, "grow-0 w-1/4 transition-all duration-300 ease-in-out") }
	>{ name }</button>
}

templ FilterFlags(filterData []filter_cards.FilterCategory) {
	<h2 class="text-2xl font-bold mb-4">Filters</h2>
	<div class="space-y-2">
		<div class="grid grid-cols-auto gap-12 px-4 w-full order-2 lg:order-2; grid-cols-[repeat(auto-fill,minmax(180px,1fr))]">
			for _, category := range filterData {
				<div>
					if len(category.DisplayTitle) > 0 {
						<h3 class="font-semibold mb-2">{ category.DisplayTitle }</h3>
					}
					<div class="space-y-2">
						<input type="hidden" name={ category.Parameter.Name } value=""/>
						for _, value := range category.Values {
							<label class="flex items-center">
								@input.Checkbox(&value, category.Parameter)
							</label>
						}
					</div>
				</div>
			}
		</div>
	</div>
}

templ SearchBar(value string) {
	<div class="flex items-center gap-1 relative">
		<div class="relative flex-grow">
			<input
				id="searchBar"
				name="query"
				type="text"
				value={ value }
				placeholder="Search..."
				hx-boost="true"
				class="w-full p-3 pl-5 pr-4 rounded-t-lg rounded-lg hover:rounded-b-none border-2 border-gray-300 focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
				oninput={ scripts.InputTextboxLiveUpdate(templ.JSExpression("this")) }
			/>
			<i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
		</div>
		<div class="top-1.5 right-2 absolute place-self-center">
			@buttonResetForm("X", false)
		</div>
	</div>
}
