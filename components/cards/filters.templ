package cards

import (
	"collector/components/input"
	"collector/components/scripts"
	"collector/internal/filter_cards"
)

const searchBarId = "searchBar"
const filtersPanelId = "filtersPanel"

//
templ Filters(nextPageEndpint, cardsTarget string, params *filter_cards.FilterParameters) {
	<form
		id="filters"
		hx-boost="true"
		hx-get={ nextPageEndpint }
		hx-target={ cardsTarget }
		class="group mx-auto px-4"
		onclick={ scripts.RequestSubmitParentForm(templ.JSExpression("event")) }
	>
		<div class="flex items-center gap-1 relative">
			@SearchBar(searchBarId, params.SearchField)
			<div class="top-1.5 right-2 absolute place-self-center fill-gray-500">
				<button
					type="button"
					onclick={ scripts.ResetFilters(templ.JSExpression("this")) }
					class="text-gray-500 pb-3 font-light
					py-2 rounded"
				>
					<svg width="24px" height="24px" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
						<path d="M9 9L15 15" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
						<path d="M15 9L9 15" stroke="#6b7280" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"></path>
						<circle cx="12" cy="12" r="9" stroke="#6b7280" stroke-width="3" stroke-linecap="round" stroke-linejoin="round"></circle>
					</svg>
				</button>
				@buttonToggleFilters()
			</div>
		</div>
		<div id={ filtersPanelId } class="hidden rounded-b-lg border-x-2 border-b-2 border-gray-300">
			<div class="w-auto px-4 gap-1 bg-white rounded-b-lg shadow-md p-6">
				@FilterFlags(params.Categories)
			</div>
		</div>
	</form>
	@scripts.InitFilterPanel(searchBarId, filtersPanelId)
}

templ buttonToggleFilters() {
	<button
		type="button"
		onclick={ scripts.ToggleFilterPanel(searchBarId, filtersPanelId) }
		class="py-2 px-3 rounded"
	>
		<svg xmlns="http://www.w3.org/2000/svg" width="24px" height="24px" fill="#6b7280" viewBox="0 0 24 24">
			<path d="M10,10,4,2H20l-6,8V22H10Z"></path>
		</svg>
	</button>
}

templ FilterFlags(filterData []filter_cards.FilterCategory) {
	<div class="space-y-2">
		<div class="grid grid-cols-auto gap-12 px-4 w-full order-2 lg:order-2; grid-cols-[repeat(auto-fill,minmax(180px,1fr))] max-sm:grid-cols-1">
			for _, category := range filterData {
				<div>
					if len(category.DisplayTitle) > 0 {
						<h3 class="font-semibold mb-2">{ category.DisplayTitle }</h3>
					}
					<div class="space-y-2">
						<input type="hidden" name={ category.Parameter.Name } value=""/>
						for _, value := range category.Values {
							<label class="flex items-center">
								@input.Checkbox(&value, category.Parameter)
							</label>
						}
					</div>
				</div>
			}
		</div>
	</div>
}

templ SearchBar(id, value string) {
	<div class="relative flex-grow">
		<input
			id={ id }
			name="query"
			type="text"
			value={ value }
			placeholder="Search..."
			hx-boost="true"
			class="w-full p-3 pl-5 pr-4 border-gr	ay-300 
			rounded-t-lg rounded-lg border-2
			focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
			oninput={ scripts.InputTextboxLiveUpdate(templ.JSExpression("this")) }
		/>
		<i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
	</div>
}
