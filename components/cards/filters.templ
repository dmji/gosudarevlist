package cards

import (
	"github.com/dmji/gosudarevlist/components/input"
	"github.com/dmji/gosudarevlist/components/scripts"
	"github.com/dmji/gosudarevlist/components/svg"
	"github.com/dmji/gosudarevlist/pkg/apps/presenter/model"
)

const searchBarId = "searchBar"
const filtersPanelId = "filtersPanel"

templ Filters(filtersEndpint string) {
	<form
		id="filters"
		class="group border-none"
		hx-boost="true"
		hx-get={ filtersEndpint }
		hx-trigger="load once,custom-event-refresh-filters from:body"
		hx-include="*"
		hx-vals="js:{ ...(event?.detail || {}) }"
		hx-target="#filters-categories"
		hx-swap="innerHTML"
		onclick={ scripts.RequestSubmitParentForm(templ.JSExpression("event")) }
	>
		<div class="flex items-center gap-1 relative">
			@SearchBar(searchBarId)
			<div class="top-1.5 right-2 absolute place-self-center fill-gray-500">
				// Button Reset Value Filters
				<button
					type="button"
					onclick={ scripts.ResetFilters(templ.JSExpression("this")) }
					class="text-gray-500 font-light py-2 rounded border-none"
				>
					@svg.ClearFilters()
				</button>
				// Button Toggle Show Filters
				<button
					type="button"
					onclick={ scripts.ToggleFilterPanel(searchBarId, filtersPanelId) }
					class="py-2 px-3 rounded border-none"
				>
					@svg.ShowFilters()
				</button>
			</div>
		</div>
		<div id={ filtersPanelId } class="hidden rounded-b-lg border-x-2 border-b-2">
			<div class="w-auto px-4 -z-10 bg-white shadow-md p-6 rounded-b-md">
				@FilterFlags()
			</div>
		</div>
	</form>
	@scripts.InitFilterPanel(searchBarId, filtersPanelId)
}

templ FilterFlags() {
	<div
		id="filters-categories"
		class="space-y-2"
	></div>
}

templ FilterFlagsPopulate(filterData []model.FilterGroup) {
	<div class="grid grid-cols-auto gap-12 px-4 w-full order-2 lg:order-2; grid-cols-[repeat(auto-fill,minmax(220px,1fr))] max-sm:grid-cols-1">
		for _, category := range filterData {
			<div>
				if len(category.DisplayTitle) > 0 {
					<h3 class="font-semibold mb-2">{ category.DisplayTitle }</h3>
				}
				<div class="space-y-2">
					<input type="hidden" name={ category.Name } value=""/>
					for _, cb := range category.CheckboxItems {
						<label class="flex items-center">
							@input.Checkbox(category.Name, cb)
						</label>
					}
				</div>
			</div>
		}
	</div>
}

templ SearchBar(id string) {
	<div class="relative flex-grow">
		<input
			id={ id }
			name="query"
			type="text"
			placeholder="Search..."
			hx-boost="true"
			class="w-full p-3 pl-5 pr-4 border-gr	ay-300 
			rounded-t-lg rounded-lg border-2
			focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary"
			oninput={ scripts.InputTextboxLiveUpdate(templ.JSExpression("this")) }
		/>
		<i class="fas fa-search absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400"></i>
	</div>
}
