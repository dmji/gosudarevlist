package cards

import (
	"collector/components/scripts"
	"collector/pkg/recollection/model"
)

templ putPageNumberResetTrigger(currentPage, i int, cards []model.ItemCartData) {
	if i == int(float64(len(cards))*0.25) {
		<div
			class="group"
			hx-trigger="intersect"
			hx-on::trigger={ scripts.QueryUpdatePage(currentPage) }
		>
			{ children... }
		</div>
	} else {
		<div
			class="group"
		>
			{ children... }
		</div>
	}
}

func queryPosterFromItem(description *model.ItemCartData) string {

	if img := description.Image; len(img) > 0 {
		return img
	}

	return "/assets/no_image.jpg"
}

templ ListItemRenderTrigger(nextPageEndpint, nextPageParams string) {
	<div
		hx-boost="true"
		hx-get={ nextPageEndpint + nextPageParams }
		hx-trigger="revealed"
		hx-swap="outerHTML"
		class="pt-96"
	></div>
}

// Recursive template
// Child of templ:  storage.templ
// Render from Api: /api/cards
templ ListItem(cards []model.ItemCartData, nextPageEndpint, nextPageParams string, bAutoloadNextPage bool, currentPage int) {
	for i, card := range cards {
		<div class="flex flex-col bg-[white] shadow-[0_2px_4px_rgba(0,0,0,0.1)] rounded-lg border-solid border-[#ddd]">
			@putPageNumberResetTrigger(currentPage, i, cards) {
				// title
				<div class="p-4 truncate text-xl font-semibold group-hover:text-wrap">
					<a
						href={ templ.URL(card.AnimeLayerRef) }
						rel="noopener noreferrer"
					>
						{ card.Title }
					</a>
				</div>
				// horizontal row with update datas
				<div class="grid grid-flow-col auto-cols-max p-px px-4 border-t-2 border-b-2">
					if len(card.CreatedDate) > 0 {
						<div class="text-gray-400">Добавлен:</div>
						<div class="px-1">{ card.CreatedDate }</div>
						<span class="px-1">| </span>
					}
					if len(card.UpdatedDate) > 0 {
						<div class="text-gray-400">Обновлен:</div>
						<div class="px-1">{ card.UpdatedDate }</div>
						<span class="px-1">| </span>
					}
					<div class="px-1">{ card.TorrentWeight }</div>
				</div>
				// horizontal row with image and description
				<div class="grid grid-flow-col">
					<div class="relative pl-2">
						if !card.IsCompleted {
							<label class="animate-pulse top-5 right-4 px-3 absolute place-self-center text-white font-bold bg-[#ef6d6d] shadow-[0_2px_4px_rgba(0,0,0,0.1)] rounded-lg border-solid border-2 border-[#ab2828]">ON AIR</label>
						}
						/* 
						<div hx-get="/graph" hx-trigger="load">
							<img alt="Result loading..." class="htmx-indicator" width="150" src="/img/bars.svg"/>
						</div>
						 */
						<img
							src={ queryPosterFromItem(&card) }
							alt={ card.Title }
							class="w-full h-[385px] object-scale-down"
						/>
					</div>
					<div class="p-4 text-sm font-sans font-normal inline-block whitespace-pre truncate">
						@templ.Raw(card.Description, nil)
					</div>
				</div>
			}
		</div>
	}
	if len(cards) > 0 && bAutoloadNextPage {
		@ListItemRenderTrigger(nextPageEndpint, nextPageParams)
	}
}
