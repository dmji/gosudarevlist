package input

import (
	"fmt"
	"github.com/dmji/gosudarevlist/pkg/recollection/model"
)

templ Checkbox(parameterName string, prm model.FilterItem) {
	<input
		type="checkbox"
		if false {
			onclick={ checkBoxCustomClick(templ.JSExpression("this")) }
			onload={ checkBoxCustomStateLoad(templ.JSExpression("this")) }
		}
		name={ parameterName }
		value={ templ.EscapeString(prm.Value) }
		value_indeterminate={ `^` + templ.EscapeString(prm.Value) }
		class="form-checkbox text-primary rounded mr-2 w-4 h-4"
		disabled?={ prm.Count == 0 }
		checked?={ prm.Selected }
	/>
	<span>{ prm.Presentation }</span>
	<span class="px-1 text-xs text-gray-500">{ fmt.Sprintf("(%d / %d)", prm.CountFiltered, prm.Count) }</span>
}

script checkBoxCustomClick(cb templ.JSExpression) {
	const character = '~'
	if (cb.readOnly) {
		cb.checked=cb.readOnly=false;
		if(cb.value.at(0) == character) {
			cb.value = cb.value.substring(1)
		}
	}
  	else if (!cb.checked) {
		cb.checked=cb.readOnly=cb.indeterminate=true;
		cb.value = character + cb.value
	}
}

script checkBoxCustomStateLoad(cb templ.JSExpression) {
	console.log(cb.value)
}

/* 	const character = '~'
	if (cb.readOnly) {
		cb.checked=cb.readOnly=false;
		if(cb.value.at(0) == character) {
			cb.value = cb.value.substring(1)
		}
	}
  	else if (!cb.checked) {
		cb.checked=cb.readOnly=cb.indeterminate=true;
		cb.value = character + cb.value
	}v
}
*/
