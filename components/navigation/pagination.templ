package navigation

type PageButtonOpt struct {
	Text   string
	Active bool
}

type PaginationOpt struct {
	Pages    []PageButtonOpt
	NextPage string
	PrevPage string
}

templ Pagination(EndlessPage bool, prm PaginationOpt) {
	<nav aria-label="Page navigation example" class="place-self-center">
		<ul class="flex items-center h-10 text-base">
			<li>
				<a href="#" class="flex items-center justify-center px-4 h-10 ms-0 leading-tight border-e-0 rounded-s-lg text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
					<span class="sr-only">Previous</span>
					<svg class="w-3 h-3 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
						<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"></path>
					</svg>
				</a>
			</li>
			for _, page := range prm.Pages {
				<li>
					@buttonPageWithText(page)
				</li>
			}
			<li>
				<a href="#" class="flex items-center justify-center px-4 h-10 leading-tight rounded-e-lg text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
					<span class="sr-only">Next</span>
					<svg class="w-3 h-3 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
						<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"></path>
					</svg>
				</a>
			</li>
		</ul>
		if EndlessPage {
			<ul class="flex items-center h-7 text-base place-items-center items-center justify-center">
				<li class="w-max">
					<a href="#" class="flex items-center justify-center px-4 h-6 ms-0 leading-tight border-e-0 rounded-lg text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">
						Endless Scroller
					</a>
				</li>
			</ul>
		}
	</nav>
}

templ buttonPageWithText(prm PageButtonOpt) {
	if prm.Active {
		<a href="#" aria-current="page" class="z-10 flex items-center justify-center px-4 h-10 leading-tight text-blue-600 border border-blue-300 bg-blue-50 hover:bg-blue-100 hover:text-blue-700 dark:border-gray-700 dark:bg-gray-700 dark:text-white">{ prm.Text }</a>
	} else {
		<a href="#" class="flex items-center justify-center px-4 h-10 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700 dark:bg-gray-800 dark:border-gray-700 dark:text-gray-400 dark:hover:bg-gray-700 dark:hover:text-white">{ prm.Text }</a>
	}
}
