package scripts 

script RequestSubmitParentForm(obj templ.JSExpression) {
	if(!obj.srcElement.attributes.hasOwnProperty("type") || obj.srcElement.attributes['type'].value != "checkbox")
	{
		return 
	}
/* 	let form = document.querySelector('form'); // выберите вашу форму
	let formData = new FormData(form); // создайте объект FormData из формы
	let formValues = {};

	for (let pair of formData.entries()) {
		formValues[pair[0]] = pair[1];
	}
	console.log('#', formValues);
	
	var values = htmx.values(form);
	let formValues2 = {};
	for (let pair of values.entries()) {
		formValues2[pair[0]] = pair[1];
	}
	console.log('##', formValues2);
 */
	htmx.trigger('body','custom-event-refresh-filters',{page:1})
}

script InputTextboxLiveUpdate(target templ.JSExpression) {
/* 	let form = document.querySelector('form'); // выберите вашу форму
	let formData = new FormData(form); // создайте объект FormData из формы
	let formValues = {};

	for (let pair of formData.entries()) {
		formValues[pair[0]] = pair[1];
	}
	console.log('$', formValues);
	var values = htmx.values(form);

	let formValues2 = {};
	for (let pair of values.entries()) {
		formValues2[pair[0]] = pair[1];
	}
	console.log('##', formValues2);
 */
	htmx.trigger('body','custom-event-refresh-filters',{page:1})

	/* 
	let inputValue = this.value.trim();
	let lastTime = performance.now();

	if (timerId) {
		clearTimeout(timerId);
	}

	timerId = setTimeout(function() {
		if (performance.now() - lastTime > 1500 && inputValue) {
			console.log('Send', inputValue);
		}
	}, 1500);
	 */
}

script LazyLoadImage(target templ.JSExpression) {
	const newImage = new Image();
	const src = target.getAttribute('original_src')
	newImage.src = src;
	newImage.onload = () => {
		target.src = src;
	};
	newImage.onerror = () => {
		console.error(`Не удалось загрузить изображение ${src}`);
	};
}

script InitFilterPanel(searchBarId, filtersPanelId string) {
	document.querySelector('#searchBar').value = new URL(window.location.href).searchParams.get('query');
	if(localStorage.getItem("show_filters") == 1) {
		document.querySelector('#'+searchBarId).classList.toggle('rounded-b-none')
		document.querySelector('#'+filtersPanelId).classList.toggle('hidden')
	} else {
		localStorage.setItem("show_filters", 0);
	}
}

script ToggleFilterPanel(searchBarId, filtersPanelId string) {
	document.querySelector('#'+searchBarId).classList.toggle('rounded-b-none')
	document.querySelector('#'+filtersPanelId).classList.toggle('hidden')
	localStorage.setItem("show_filters", localStorage.getItem("show_filters") == 1 ? 0 : 1);
}
