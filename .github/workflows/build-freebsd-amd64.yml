# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: build-freebsd-amd64

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5.2.0
      with:
        go-version: '1.23.1'

    - name: Install Taskfile
      run: sudo snap install task --classic

    - name: Generate tailwind
      run: task tailwind:prod

    - name: Pre-Build
      run: task pre-build-prod

    - name: Build
      run: task build:freebsd-amd64

    - name: Sync files
      uses: SamKirkland/FTP-Deploy-Action@v4.3.5
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USER }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./~builds/freebsd/amd64/

    - name: executing remote ssh commands
      uses: appleboy/ssh-action@v1.2.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_KEY }}
        port: ${{ secrets.SSH_PORT }}
        command_timeout: 30s
        script: |
          pkill -f ./server
          rm -f repo/gosudarevlist/server
          mv server repo/gosudarevlist/server
          cd repo/gosudarevlist
          chmod 777 server
          nohup ./server -port=54320 > nohup.out 2> nohup.err < /dev/null &
